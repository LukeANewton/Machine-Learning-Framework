package GUI;

import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.SwingUtilities;

import problemComponents.Problem;

/**
 * Superclass for all Panels which ask the user for input
 * 
 * @author luke newton, Madelyn Krasnay
 * @version 3
 */
public abstract class UserInputPanel extends JPanel{
	//serialized ID
	private static final long serialVersionUID = -5308635729481030415L;
	//the problem set currently working with
	protected Problem problem;
	/*collection containing references to the textfields in this content pane
				so we can get their text contents later*/
	protected ArrayList<TextFieldInputPanel> panels;
	//button to complete the function current Panel is providing
	protected JButton doneButton;
	
	protected JButton cancelButton;

	/**
	 * Constructor
	 * 
	 * @param problem reference to the current problem being worked on
	 */
	public UserInputPanel(Problem problem){
		super();

		this.problem = problem;
		panels = new ArrayList<TextFieldInputPanel>();
	}

	/**
	 * create and add the required content of this container
	 * 
	 * @param n the number of attribute/features in a training/test example
	 * @param inputPanelNames the text to describe the type of input for each InputPanel
	 */
	protected void createContent(int n, ArrayList<String> inputPanelNames){
		setLayout(new GridBagLayout());
		GridBagConstraints c = new GridBagConstraints();
		c.fill = GridBagConstraints.BOTH;
		c.gridx = 0;
		c.gridy = 0;
		c.gridwidth = 2;
		c.weightx = 1;
		c.weighty = 1;

		JScrollPane scrollPane = new JScrollPane();
		JPanel panel = new JPanel();
		panel.setLayout(new GridBagLayout());
		GridBagConstraints pc = new GridBagConstraints();
		pc.fill = GridBagConstraints.HORIZONTAL;
		pc.gridx = 0;
		pc.gridy = 0;
		pc.weightx = 1;

		//create a Input panel for each new attribute
		for(int i = 0; i < n; i++){
			//create a JLabel for each attribute and create a panel with that title
			TextFieldInputPanel textPanel = new TextFieldInputPanel(inputPanelNames.get(i));
			//add a reference to each panel in a collection to get value from them in action listener
			panels.add(textPanel);
			panel.add(textPanel,pc);
			pc.gridy++;
		}
		
		scrollPane.setViewportView(panel);
		scrollPane.getVerticalScrollBar().setUnitIncrement(16);
		add(scrollPane, c);

		//include a button to indicate the user has finished inputing data
		cancelButton = new JButton("Cancel");
		c.gridy++;
		c.weighty = 0;
		c.gridwidth = 1;
		c.fill = GridBagConstraints.HORIZONTAL;
		add(cancelButton, c);
		cancelButton.addActionListener(new CancelWeightsListener());
		
		
		doneButton = new JButton("Done");
		c.gridx++;
		add(doneButton, c);
	}

	/**
	 * returns to the main display window when a done button has been clicked
	 * 
	 * @param e the event generated by the done button
	 */
	protected void returnToDisplayScreen(ActionEvent e){
		//get the frame by getting the source of this event, and the window the source exists in
		Controller controller = (Controller) SwingUtilities.windowForComponent((JButton)e.getSource());

		returnToDisplayScreen(controller);
	}

	/**
	 * returns to the main display window when a done button has been clicked
	 * 
	 * @param controller the Controller frame for the project
	 */
	protected void returnToDisplayScreen(Controller controller){
		//update the problem set in the frame
		controller.problem = problem;

		//return to the main display of problem info
		controller.setContentPane(new DisplayProblemContents(controller));
		controller.pack();
	}
	
	/*action listener for applying new weights to problem*/
	private class CancelWeightsListener implements ActionListener{
		public void actionPerformed(ActionEvent e) {
			returnToDisplayScreen(e);
		}
	}
}

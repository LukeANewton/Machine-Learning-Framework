package problemComponents;

import java.util.ArrayList;

/**
 * Represents a data point used by the system to predict the unknown value of a TestExample
 * 
 * @author Luke Newton
 */
public class TrainingExample extends Example {
	//autogenerated serialization ID for saving object to a file
	private static final long serialVersionUID = 3110230538734045037L;

	/** 
	 * Constructor
	 * 
	 * @param features the collection of features that ake up this data point
	 */
	public TrainingExample(ArrayList<Feature> features){
		super();
		fields = features;
	}
	
	public TestExample toTestExample(){
		return new TestExample(this.fields);
	}
	
	/**equals override*/
	@Override
	public boolean equals(Object o){
		if(!(o instanceof TrainingExample))
			return false;

		ArrayList<Feature> oFields = ((TrainingExample)o).getFields();

		int maxSize =  Math.min(fields.size(), oFields.size());
		for(int i = 0; i < maxSize; i++){	
			if(fields.get(i) == null && oFields.get(i) == null)
				continue;	
			else if(!fields.get(i).equals(oFields.get(i)))
				return false;
		}
		return true;
	}
	
	/**toString override*/
	@Override
	public String toString(){
		StringBuffer buf = new StringBuffer();
		buf.append("[" + fields.get(0));
		
		for(int i = 1; i < fields.size(); i++)
			buf.append("," + fields.get(i));
		
		buf.append("]");
		
		return buf.toString();
	}
}
